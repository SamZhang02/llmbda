import os
import pandas as pd
import re
import random

SUBJECTS = [
    "ACCT",
    "AEBI",
    "AECH",
    "AEHM",
    "AEMA",
    "AEPH",
    "AERO",
    "AFRI",
    "AGEC",
    "AGRI",
    "ANAE",
    "ANAT",
    "ANSC",
    "ANTH",
    "ARCH",
    "ARTE",
    "ARTH",
    "ASPL",
    "ATOC",
    "BASC",
    "BBME",
    "BIEN",
    "BINF",
    "BIOC",
    "BIOE",
    "BIOL",
    "BIOS",
    "BIOT",
    "BMDE",
    "BREE",
    "BTEC",
    "BUS1",
    "BUS2",
    "BUSA",
    "CACC",
    "CACF",
    "CAFT",
    "CANS",
    "CATH",
    "CBUS",
    "CCAU",
    "CCCS",
    "CCFA",
    "CCFC",
    "CCLW",
    "CCMA",
    "CCOM",
    "CCPA",
    "CCS2",
    "CCTR",
    "CCTX",
    "CEC2",
    "CEEN",
    "CEFN",
    "CEGL",
    "CEN2",
    "CENG",
    "CENT",
    "CFIN",
    "CFRN",
    "CGM2",
    "CGMG",
    "CHEE",
    "CHEM",
    "CHLC",
    "CHSS",
    "CIAM",
    "CINC",
    "CIVE",
    "CLAS",
    "CMIS",
    "CMPL",
    "CMR2",
    "CMRK",
    "CMS2",
    "CMSC",
    "COGS",
    "COMP",
    "COMS",
    "CORG",
    "CPAC",
    "CPAG",
    "CPD2",
    "CPDV",
    "CPL2",
    "CPRL",
    "CSCI",
    "CSPN",
    "CTPT",
    "DENT",
    "EAST",
    "ECON",
    "ECSE",
    "EDEA",
    "EDEC",
    "EDEE",
    "EDEM",
    "EDER",
    "EDES",
    "EDFC",
    "EDFE",
    "EDFM",
    "EDGC",
    "EDIN",
    "EDKP",
    "EDLE",
    "EDPC",
    "EDPD",
    "EDPE",
    "EDPH",
    "EDPI",
    "EDPS",
    "EDPT",
    "EDSL",
    "EDSP",
    "EDTL",
    "EDUM",
    "ELEC",
    "ENGL",
    "ENTO",
    "ENVB",
    "ENVR",
    "EPIB",
    "EPSC",
    "ESYS",
    "EXMD",
    "EXSU",
    "FACC",
    "FAES",
    "FDSC",
    "FIGA",
    "FIGE",
    "FIGG",
    "FIGI",
    "FIGN",
    "FIGS",
    "FILM",
    "FINE",
    "FMED",
    "FMT4",
    "FMTP",
    "FREN",
    "FRSL",
    "FSCI",
    "GEOG",
    "GERM",
    "GLIS",
    "GSFS",
    "HGEN",
    "HISP",
    "HIST",
    "HPSC",
    "HSED",
    "HSEL",
    "HSSM",
    "IDFC",
    "IGFS",
    "IMED",
    "INDG",
    "INDR",
    "INDS",
    "INFS",
    "INLG",
    "INSY",
    "INTD",
    "INTG",
    "IPEA",
    "ISLA",
    "ITAL",
    "JWST",
    "LACS",
    "LAWG",
    "LEEL",
    "LIBA",
    "LING",
    "LLCU",
    "LSCI",
    "MATH",
    "MDPH",
    "MDST",
    "MECH",
    "MGCR",
    "MGMT",
    "MGPO",
    "MGSC",
    "MHEC",
    "MICR",
    "MIME",
    "MIMM",
    "MPCO",
    "MPMC",
    "MRKT",
    "MSUS",
    "MUAR",
    "MUCO",
    "MUCT",
    "MUEN",
    "MUGS",
    "MUGT",
    "MUHL",
    "MUIN",
    "MUIT",
    "MUJZ",
    "MUMT",
    "MUPD",
    "MUPG",
    "MUPP",
    "MURG",
    "MUSP",
    "MUSR",
    "MUTH",
    "NEUR",
    "NRSC",
    "NSCI",
    "NUR1",
    "NUR2",
    "NUTR",
    "OBGY",
    "OCC1",
    "OCCH",
    "ONCO",
    "OPTH",
    "ORGB",
    "OTOL",
    "PAED",
    "PARA",
    "PATH",
    "PHAR",
    "PHGY",
    "PHIL",
    "PHTH",
    "PHWR",
    "PHYS",
    "PLAI",
    "PLNT",
    "POLI",
    "POTH",
    "PPHS",
    "PPOL",
    "PRAC",
    "PROC",
    "PRV2",
    "PRV3",
    "PRV4",
    "PRV5",
    "PSYC",
    "PSYT",
    "PUB2",
    "PUB3",
    "QCST",
    "QLSC",
    "RADD",
    "REDM",
    "RELG",
    "RETL",
    "RUSS",
    "SCSD",
    "SEAD",
    "SENT",
    "SOCI",
    "SOIL",
    "SURG",
    "SWRK",
    "TRNS",
    "UQAC",
    "URBP",
    "WCOM",
    "WILD",
    "WMST",
    "WOOD",
    "WRIT",
]


SUBJECT_PATTERN = re.compile(r"([A-Z]{3}[A-Z0-9]{1})")
CODE_PATTERN = re.compile(r"([0-9]{3})")

TRAIN_PATH = os.path.join("dataset", "train.csv")


def replace_coursecode(string, rules):
    course_codes = set(re.findall(SUBJECT_PATTERN, string))

    for code in course_codes:
        if code not in rules:
            rules[code] = random.choice(SUBJECTS)
        string = string.replace(code, rules[code])

    return string


def replace_id(string, rules):
    course_ids = set(re.findall(CODE_PATTERN, string))

    for id in course_ids:
        if id not in rules:
            rules[id] = str(random.randint(100, 800))

        string = string.replace(id, rules[id])

    return string


df = pd.read_csv(TRAIN_PATH)
print(df)

total = df.copy(deep=True)

for i in range(8):
    new_df = df.copy(deep=True)
    for i, info in df.iterrows():
        rules = {}

        new_df.at[i, "requisite"] = replace_coursecode(new_df.at[i, "requisite"], rules)
        new_df.at[i, "object_tree"] = replace_coursecode(
            new_df.at[i, "object_tree"], rules
        )
        # new_df.at[i, 'json_tree'] = replace_coursecode(new_df.at[i,'json_tree'], rules)
        #
        new_df.at[i, "requisite"] = replace_id(new_df.at[i, "requisite"], rules)
        new_df.at[i, "object_tree"] = replace_id(new_df.at[i, "object_tree"], rules)
        # new_df.at[i, 'json_tree'] = replace_id(new_df.at[i,'json_tree'], rules)
    total = pd.concat([total, new_df])

total.to_csv(TRAIN_PATH)
